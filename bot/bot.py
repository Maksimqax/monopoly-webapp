#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ú–æ–Ω–æ–ø–æ–ª–∏—è ‚Äî –ª–æ–∫–∞–ª—å–Ω—ã–π –±–æ—Ç (polling) —Å –∫–Ω–æ–ø–∫–æ–π-—Å—Å—ã–ª–∫–æ–π.
–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–π WebApp –ø–æ –∞–¥—Ä–µ—Å—É http://127.0.0.1:8000/webapp
"""

import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# –í–°–¢–ê–í–õ–ï–ù–ù–´–ô –¢–û–ö–ï–ù –û–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
BOT_TOKEN = "8257515736:AAGAFzjzNM9q85OA6AFJR6CeuBOQhgXyQmU"

PUBLIC_URL = "http://127.0.0.1:8000/webapp"  # –ª–æ–∫–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ WebApp

logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s | %(levelname)s | %(name)s | %(message)s"
)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    kb = InlineKeyboardMarkup([[InlineKeyboardButton("üé≤ –û—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä—É", url=PUBLIC_URL)]])
    await update.message.reply_text("–ú–æ–Ω–æ–ø–æ–ª–∏—è (–ª–æ–∫–∞–ª—å–Ω–æ). –ñ–º–∏ –∫–Ω–æ–ø–∫—É:", reply_markup=kb)

async def help_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("/start ‚Äî –æ—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∏–≥—Ä—É\n/room <id> ‚Äî —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–æ–º–Ω–∞—Ç—É (–¥–æ–±–∞–≤–ª—é –ø–æ–∑–∂–µ)")

def main():
    if not BOT_TOKEN:
        raise SystemExit("–ù–µ—Ç —Ç–æ–∫–µ–Ω–∞!")
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_cmd))
    logging.info("Bot starting (polling)‚Ä¶")
    app.run_polling()

if __name__ == "__main__":
    main()
